out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 200
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 300
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n
n <- 400
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 500
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
d <- c(2,5)
k <- 1
#--------------------------------------------------------------------------#
# Creating covariance matrices under H0 and H1.
#################################### Note ##################################
# We keep a provision for using the correlated as well as the diagonal
# covariance matrices. Once should be careful to note that for the diagonal
# case the parameter sigma.param becomes the diagonal elements of the
# covariance matrix and hence it should be made equal to the variance and
# not the standard deviation in that case
############################################################################
# Sigma0 matrix <- cov matrix under H0
Sigma0 <- matrix(0, nrow = d[k], ncol = d[k])
for(i in 1:d[k]){
for(j in 1:d[k]){
Sigma0[i,j] = sigma.param^(abs(i-j))
}
}
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
#--------------------------------------------------------------------------#
#--------------------------------------------------------------------------#
# mean vector under H0
mu0 <- rep(0, d[k])
# mean vector under H1
mu1 <- rep(mu.param, d[k])
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 100
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 200
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 400
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col5 <- Multi.MMD(n, d[k], p,kernel.choice[5], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n
n <- 300
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 500
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col5 <- Multi.MMD(n, d[k], p,kernel.choice[5], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
source("~/.active-rstudio-document", echo=TRUE)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n
d
k
n <- 100
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 200
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
cat("Multiple Kernel-2 in iteration",c(out.row.col4,k),"\n")
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col5 <- Multi.MMD(n, d[k], p,kernel.choice[5], n.iter)
n <- 300
out.row.col5 <- Multi.MMD(n, d[k], p,kernel.choice[5], n.iter)
n ,- 400
n.iter <- 200
out.row.col5 <- Multi.MMD(n, d[k], p,kernel.choice[5], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
source("~/.active-rstudio-document", echo=TRUE)
# parameter for sigma0 matrix generation
sigma.param <- 1
# parameter for sigma1 = c*sigma0 matrix generation
sigma.mult <- 2
d <- c(10,20)
n <- 100
source("~/.active-rstudio-document", echo=TRUE)
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 200
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
# parameter for sigma1 = c*sigma0 matrix generation
sigma.mult <- 3
Sigma0 <- diag(sigma.param, d[k], d[k])
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
#--------------------------------------------------------------------------#
#--------------------------------------------------------------------------#
# mean vector under H0
mu0 <- rep(0, d[k])
# mean vector under H1
mu1 <- rep(mu.param, d[k])
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
# parameter for sigma1 = c*sigma0 matrix generation
sigma.mult <- 2
Sigma0 <- diag(sigma.param, d[k], d[k])
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
#--------------------------------------------------------------------------#
#--------------------------------------------------------------------------#
# mean vector under H0
mu0 <- rep(0, d[k])
# mean vector under H1
mu1 <- rep(mu.param, d[k])
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 100
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 30
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
d <- 30
d <- c(30,40)
Sigma0 <- diag(sigma.param, d[k], d[k])
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
#--------------------------------------------------------------------------#
#--------------------------------------------------------------------------#
# mean vector under H0
mu0 <- rep(0, d[k])
# mean vector under H1
mu1 <- rep(mu.param, d[k])
n <- 100
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 30
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
# parameter for sigma0 matrix generation
sigma.param <- 0.5
# parameter for sigma1 = c*sigma0 matrix generation
sigma.mult <- 1.15
#--------------------------------------------------------------------------#
# Creating covariance matrices under H0 and H1.
#################################### Note ##################################
# We keep a provision for using the correlated as well as the diagonal
# covariance matrices. Once should be careful to note that for the diagonal
# case the parameter sigma.param becomes the diagonal elements of the
# covariance matrix and hence it should be made equal to the variance and
# not the standard deviation in that case
############################################################################
# Sigma0 matrix <- cov matrix under H0
Sigma0 <- matrix(0, nrow = d[k], ncol = d[k])
for(i in 1:d[k]){
for(j in 1:d[k]){
Sigma0[i,j] = sigma.param^(abs(i-j))
}
}
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
#--------------------------------------------------------------------------#
#--------------------------------------------------------------------------#
# mean vector under H0
mu0 <- rep(0, d[k])
# mean vector under H1
mu1 <- rep(mu.param, d[k])
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 100
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col5 <- Multi.MMD(n, d[k], p,kernel.choice[5], n.iter)
d <- c(25,30)
#--------------------------------------------------------------------------#
# Creating covariance matrices under H0 and H1.
#################################### Note ##################################
# We keep a provision for using the correlated as well as the diagonal
# covariance matrices. Once should be careful to note that for the diagonal
# case the parameter sigma.param becomes the diagonal elements of the
# covariance matrix and hence it should be made equal to the variance and
# not the standard deviation in that case
############################################################################
# Sigma0 matrix <- cov matrix under H0
Sigma0 <- matrix(0, nrow = d[k], ncol = d[k])
for(i in 1:d[k]){
for(j in 1:d[k]){
Sigma0[i,j] = sigma.param^(abs(i-j))
}
}
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
#--------------------------------------------------------------------------#
#--------------------------------------------------------------------------#
# mean vector under H0
mu0 <- rep(0, d[k])
# mean vector under H1
mu1 <- rep(mu.param, d[k])
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n
out.row.col3 <- Multi.MMD(n, d[k], p,kernel.choice[3], n.iter)
n <- 200
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 100
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n.iter <- 500
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
source("~/.active-rstudio-document", echo=TRUE)
# Number of data points
n <- 100
# Dimension vector of data
d <- c(5, 10, 25, 50,75,100,150)
# probability of mixture
p <- 0
# parameter for sigma0 matrix generation
sigma.param <- 0.5
# parameter for sigma1 = c*sigma0 matrix generation
sigma.mult <- 1.15
# parameter for mean value for H1 distribution
mu.param <- 0
# 1st coordinate for single, 2nd for multiple
kernel.choice <- c("LAP","GAUSS", "LAP","GEXP", "MIXED")
k <- 3
#--------------------------------------------------------------------------#
# Creating covariance matrices under H0 and H1.
#################################### Note ##################################
# We keep a provision for using the correlated as well as the diagonal
# covariance matrices. Once should be careful to note that for the diagonal
# case the parameter sigma.param becomes the diagonal elements of the
# covariance matrix and hence it should be made equal to the variance and
# not the standard deviation in that case
############################################################################
# Sigma0 matrix <- cov matrix under H0
Sigma0 <- matrix(0, nrow = d[k], ncol = d[k])
for(i in 1:d[k]){
for(j in 1:d[k]){
Sigma0[i,j] = sigma.param^(abs(i-j))
}
}
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
#--------------------------------------------------------------------------#
#--------------------------------------------------------------------------#
# mean vector under H0
mu0 <- rep(0, d[k])
# mean vector under H1
mu1 <- rep(mu.param, d[k])
out.row.col1 <- Single.MMD(n, d[k], p,kernel.choice[1], n.iter)
n.iter <- 200
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
source("~/.active-rstudio-document", echo=TRUE)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 200
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 300
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
d <- c(10,11)
k <- 1
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
source("~/.active-rstudio-document", echo=TRUE)
Sigma0 <- diag(sigma.param, d[k], d[k])
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
#--------------------------------------------------------------------------#
#--------------------------------------------------------------------------#
# mean vector under H0
mu0 <- rep(0, d[k])
# mean vector under H1
mu1 <- rep(mu.param, d[k])
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
# parameter for sigma0 matrix generation
sigma.param <- 1
Sigma0 <- diag(sigma.param, d[k], d[k])
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
#--------------------------------------------------------------------------#
#--------------------------------------------------------------------------#
# mean vector under H0
mu0 <- rep(0, d[k])
# mean vector under H1
mu1 <- rep(mu.param, d[k])
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
# parameter for sigma1 = c*sigma0 matrix generation
sigma.mult <- 1
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 1000
d <- c(2,5)
Sigma0 <- diag(sigma.param, d[k], d[k])
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
#--------------------------------------------------------------------------#
#--------------------------------------------------------------------------#
# mean vector under H0
mu0 <- rep(0, d[k])
# mean vector under H1
mu1 <- rep(mu.param, d[k])
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 100
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 200
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 300
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 500
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
source("~/.active-rstudio-document", echo=TRUE)
n <- 100
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 200
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 300
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
d <- c(10,11)
n <- 100
# parameter for sigma1 = c*sigma0 matrix generation
sigma.mult <- 1.15
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 200
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
source("~/.active-rstudio-document", echo=TRUE)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
# parameter for sigma1 = c*sigma0 matrix generation
sigma.mult <- 2
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
# parameter for sigma1 = c*sigma0 matrix generation
sigma.mult <- 1.2
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
# parameter for sigma1 = c*sigma0 matrix generation
sigma.mult <- 1.15
# parameter for sigma1 = c*sigma0 matrix generation
sigma.mult <- 1.2
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 300
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 400
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
# parameter for sigma1 = c*sigma0 matrix generation
sigma.mult <- 1
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
n
n.iter <- 500
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
Sigma0 <- diag(sigma.param, d[k], d[k])
d <- c(2,5)
Sigma0 <- diag(sigma.param, d[k], d[k])
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
#--------------------------------------------------------------------------#
#--------------------------------------------------------------------------#
# mean vector under H0
mu0 <- rep(0, d[k])
# mean vector under H1
mu1 <- rep(mu.param, d[k])
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col5 <- Multi.MMD(n, d[k], p,kernel.choice[5], n.iter)
out.row.col2 <- Single.MMD(n, d[k], p,kernel.choice[2], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 100
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 200
n <- 50
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
d <- c(5,10)
Sigma0 <- diag(sigma.param, d[k], d[k])
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
#--------------------------------------------------------------------------#
#--------------------------------------------------------------------------#
# mean vector under H0
mu0 <- rep(0, d[k])
# mean vector under H1
mu1 <- rep(mu.param, d[k])
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n
n <- 100
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 500
n <- 400
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
d <- c(10,11)
n <- 1000
Sigma0 <- diag(sigma.param, d[k], d[k])
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
#--------------------------------------------------------------------------#
#--------------------------------------------------------------------------#
# mean vector under H0
mu0 <- rep(0, d[k])
# mean vector under H1
mu1 <- rep(mu.param, d[k])
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
d
d <- c(2,1)
n <- 30
Sigma0 <- diag(sigma.param, d[k], d[k])
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
#--------------------------------------------------------------------------#
#--------------------------------------------------------------------------#
# mean vector under H0
mu0 <- rep(0, d[k])
# mean vector under H1
mu1 <- rep(mu.param, d[k])
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 50
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 100
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 200
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
d <- c(3,1)
Sigma0 <- diag(sigma.param, d[k], d[k])
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
#--------------------------------------------------------------------------#
#--------------------------------------------------------------------------#
# mean vector under H0
mu0 <- rep(0, d[k])
# mean vector under H1
mu1 <- rep(mu.param, d[k])
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
d <- (5,1)
d <- c(5,1)
Sigma0 <- diag(sigma.param, d[k], d[k])
Sigma0 <- diag(sigma.param, d[k], d[k])
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
#--------------------------------------------------------------------------#
#--------------------------------------------------------------------------#
# mean vector under H0
mu0 <- rep(0, d[k])
# mean vector under H1
mu1 <- rep(mu.param, d[k])
out.row.col1 <- Single.MMD(n, d[k], p,kernel.choice[1], n.iter)
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n
n <- 300
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
n <- 400
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
d <- c(7,10)
Sigma0 <- diag(sigma.param, d[k], d[k])
#---------------------------######################-------------------------#
# cov matrix under H1
Sigma1 <- sigma.mult*Sigma0
#--------------------------------------------------------------------------#
#--------------------------------------------------------------------------#
# mean vector under H0
mu0 <- rep(0, d[k])
# mean vector under H1
mu1 <- rep(mu.param, d[k])
out.row.col4 <- Multi.MMD(n, d[k], p,kernel.choice[4], n.iter)
