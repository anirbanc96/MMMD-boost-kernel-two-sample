require(emulator)
U=runif(n, 0, 1)
P=matrix(0, nrow=n, ncol=n)
for(a in 1:(n-1)){
for(b in (a+1):n){
P[a,b] <- K2.reg.W2(U[a], U[b])
}
}
P <- P + t(P)
Gnvector=rbinom(m, 1, P[lower.tri(P)])
Gn=matrix(0, n, n)
Gn[lower.tri(Gn, diag=FALSE)] <- Gnvector
Gn <- t(Gn)
Gn<-Gn+t(Gn)
Gn2 <- Gn %*% Gn
Gn3 <- Gn2 %*% Gn
K2.ind <- ((sqrt(n) * R.K2(Gn, Gn2, Gn3, n)) > 0.5)
CR.quant <- f.quantile.K2(Gn, Gn2, Gn3, K2.ind, n)
count.K2 <- sum(Gn)/2
CR.return  <- CR.contain.K2(count.K2, n, CR.quant, K2.ind, 1/3)
}
#stop cluster
stopCluster(cl)
CR.out <- apply(CR.mat, 2, mean)
CR.out
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
CR.out
source("~/.active-rstudio-document", echo=TRUE)
CR.out
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/New-Code.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Functions.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
warnings()
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Functions.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/K3Code.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/K3Code.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/K3Code.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Functions.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
require(tidyverse)
ggplot() +
geom_ellipse(aes(x0 = 0, y0 = 0, a = 10, b = 3, angle = 0)) +
coord_fixed()
install.packages("ggforce")
require(ggforce)
ggplot() +
geom_ellipse(aes(x0 = 0, y0 = 0, a = 10, b = 3, angle = 0)) +
coord_fixed()
ggplot() +
geom_ellipse(aes(x0 = 10, y0 = 0, a = 10, b = 3, angle = 0)) +
coord_fixed()
ggplot() +
geom_ellipse(aes(x0 = 0, y0 = 0, a = 6, b = 3, angle = -pi / 3, m1 = 3)) +
coord_fixed()
ggplot() +
geom_ellipse(aes(x0 = 0, y0 = 0, a = 10, b = 3, angle = 0)) +
coord_fixed()
ggplot() +
geom_ellipse(aes(x0 = 0, y0 = 0, a = 1, b = 3, angle = 0)) +
coord_fixed()+
)
ggplot() +
geom_ellipse(aes(x0 = 0, y0 = 0, a = 1, b = 3, angle = 0)) +
coord_fixed()
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Functions.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Functions.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
ggplot() +
geom_ellipse(aes(x0 = 0.2502, y0 = 0.0364, a = 0.0217, b = 0.378, angle = 0)) +
coord_fixed()
ggplot() +
geom_ellipse(aes(x0 = 0.2502, y0 = 0.0364, a = 0.008, b = 0.0504, angle = 0)) +
coord_fixed()
ggplot() +
geom_ellipse(aes(x0 = 0.2502, y0 = 0.0364, a = 0.008, b = 0.0504, angle = 0))
ggplot() +
geom_ellipse(aes(x0 = 0.2502, y0 = 0.0364, a = 0.021, b = 0.37, angle = 0))
warnings()
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
pi
for (i in 1:length(n.set)){
pi * CR.out[i, 4] * CR.out[i, 5]
}
for (i in 1:length(n.set)){
print(pi * CR.out[i, 4] * CR.out[i, 5])
}
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Functions.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Functions.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Functions.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K3.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
CR.out.K2[,2] * CR.out.K3[,2]
CR.joint.area <- rep(0, length(n.set))
for (i in 1:length(n.set)){
CR.joint.area <- print(pi * CR.out.joint[i, 4] * CR.out.joint[i, 5])
}
(CR.out.joint <- CR.out)
CR.joint.area <- rep(0, length(n.set))
for (i in 1:length(n.set)){
CR.joint.area <- pi * CR.out.joint[i, 4] * CR.out.joint[i, 5]
}
CR.joint.area
for (i in 1:length(n.set)){
CR.joint.area[i] <- pi * CR.out.joint[i, 4] * CR.out.joint[i, 5]
}
CR.joint.area
(CR.out.K2[,2] * CR.out.K3[,2])>=CR.joint.area
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K3.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K3.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K3.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K3.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K3.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K3.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K3.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K3.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Functions.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Joint.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Functions.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Functions.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2.R", echo=TRUE)
CR.out
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2CI.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2CI.R", echo=TRUE)
CR.dat <- as.data.frame(CR.out[[1]])
View(CR.dat)
CR.dat <- cbind(1:iterations, CR.dat)
colnames(CR.dat) <- c("Index", "Prop", "Low", "Up", "Len")
View(CR.dat)
CR.dat <- as.data.frame(CR.out[[1]])
CR.dat <- cbind(1:iterations, rep(1/4,iterations), CR.dat)
colnames(CR.dat) <- c("Index", "True Value", "Prop", "Low", "Up", "Len")
p<- CR.dat %>%
ggplot(aes(x=Index, y="True Value")) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=Low, ymax=Up), width=.2,
position=position_dodge(0.05))
p
View(CR.dat)
CR.dat %>%
ggplot(aes(x=Index, y="True Value")) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=Low, ymax=Up), width=.2)
CR.dat %>%
ggplot(aes(x=Index, y="True Value")) +
geom_line()
CR.dat %>%
ggplot(aes(x=Index, y="True Value")) +
geom_point()
CR.dat %>%
ggplot(aes(x=Index, y="True Value")) +
geom_point()+
geom_errorbar(aes(ymin=Low, ymax=Up), width=.2)
CR.dat %>%
ggplot(aes(x=Index, y="True Value")) +
geom_point()+
geom_errorbar(aes(ymin=Low, ymax=Up))
CR.dat <- as_tibble(CR.out[[1]])
View(CR.dat)
CR.dat <- cbind(1:iterations, rep(1/4,iterations), CR.dat)
colnames(CR.dat) <- c("Index", "True Value", "Prop", "Low", "Up", "Len")
View(CR.dat)
CR.dat <- as_tibble(CR.out[[1]])
CR.dat <- cbind(1:iterations, sample(0,1/4,iterations), CR.dat)
?sample
CR.dat <- as_tibble(CR.out[[1]])
CR.dat <- cbind(1:iterations, runif(0,1/4,iterations), CR.dat)
colnames(CR.dat) <- c("Index", "True Value", "Prop", "Low", "Up", "Len")
runif(0,1/4,iterations)
runif
?runif
CR.dat <- as_tibble(CR.out[[1]])
CR.dat <- cbind(1:iterations, runif(iterations, 0,1/4), CR.dat)
colnames(CR.dat) <- c("Index", "True Value", "Prop", "Low", "Up", "Len")
CR.dat %>%
ggplot(aes(x=Index, y="True Value")) +
geom_point()+
geom_errorbar(aes(ymin=Low, ymax=Up))
View(CR.dat)
View(CR.dat)
CR.dat
CR.dat <- as_tibble(CR.out[[1]])
CR.dat <- cbind(1:iterations, runif(iterations, 0,1/4), CR.dat)
colnames(CR.dat) <- c("Index", "True Value", "Prop", "Low", "Up", "Len")
CR.dat <- as_tibble(CR.dat)
CR.dta
CR.dat
CR.dat %>%
ggplot(aes(x=Index, y="True Value")) +
geom_point()+
geom_errorbar(aes(ymin=Low, ymax=Up))
colnames(CR.dat) <- c("Index", "TrueValue", "Prop", "Low", "Up", "Len")
CR.dat <- as_tibble(CR.dat)
CR.dat %>%
ggplot(aes(x=Index, y=TrueValue)) +
geom_point()+
geom_errorbar(aes(ymin=Low, ymax=Up))
CR.dat <- as_tibble(CR.out[[1]])
CR.dat <- cbind(1:iterations, rep(1/4. iterations), CR.dat)
colnames(CR.dat) <- c("Index", "True Value", "Prop", "Low", "Up", "Len")
CR.dat <- as_tibble(CR.dat)
CR.dat <- as_tibble(CR.out[[1]])
CR.dat <- cbind(1:iterations, rep(1/4, iterations), CR.dat)
colnames(CR.dat) <- c("Index", "True Value", "Prop", "Low", "Up", "Len")
CR.dat <- as_tibble(CR.dat)
CR.dat %>%
ggplot(aes(x=Index, y=`True Value`)) +
geom_point()+
geom_errorbar(aes(ymin=Low, ymax=Up))
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2CI.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2CI.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2CI.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2CI.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2CI.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2CI.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2CI.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2CI.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2CI.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2CI.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Functions.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2CI.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/Graphons.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2CI.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2CI.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2CI.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Graphon Testing/Codes/Codes/K2CI.R", echo=TRUE)
setwd("C:/Users/anirbanc/Dropbox (Penn)/Kernel-Two-Sample/Simulations/Perturbed Uniform - MMDAgg/MMDAgg-Paper/Kernel Code - MMDAgg/MNIST - AWGN")
setwd("C:/Users/anirbanc/Dropbox (Penn)/Kernel-Two-Sample/Simulations/Perturbed Uniform - MMDAgg/OverMean-DIM")
source("C:/Users/anirbanc/Dropbox (Penn)/Kernel-Two-Sample/Simulations/Perturbed Uniform - MMDAgg/OverMean-DIM/Body.R", echo=TRUE)
f <- function(x,y, kernel_choice, perm, type) {
e <- new.env()
options("reticulate.engine.environment" = e)
# create a new variable with a random name
tmp_var_x <- paste(sample(letters, 30, replace = TRUE), collapse = "")
#message(tmp_var_name)
assign(tmp_var_x, x, envir = e)
tmp_var_y <- paste(sample(letters, 30, replace = TRUE), collapse = "")
#message(tmp_var_name)
assign(tmp_var_y, y, envir = e)
tmp_var_kernel <- paste(sample(letters, 30, replace = TRUE), collapse = "")
#message(tmp_var_name)
assign(tmp_var_kernel, kernel_choice, envir = e)
tmp_var_perm <- paste(sample(letters, 30, replace = TRUE), collapse = "")
#message(tmp_var_name)
assign(tmp_var_perm, perm, envir = e)
tmp_var_type <- paste(sample(letters, 30, replace = TRUE), collapse = "")
#message(tmp_var_name)
assign(tmp_var_type, type, envir = e)
#tmp_var_l <- paste(sample(letters, 30, replace = TRUE), collapse = "")
#message(tmp_var_name)
#assign(tmp_var_l, l, envir = e)
#tmp_var_u <- paste(sample(letters, 30, replace = TRUE), collapse = "")
#message(tmp_var_name)
#assign(tmp_var_u, u, envir = e)
reticulate::source_python("Test-Run.py")
res <- reticulate::py_run_string(glue::glue("py_count = mmdagg(100, r.{tmp_var_x}, r.{tmp_var_y}, 0.05, r.{tmp_var_kernel}, r.{tmp_var_perm}, r.{tmp_var_type}, 10,14, 500, 500, 100)"))
options("reticulate.engine.environment" = NULL)  # unset option
return (res)
}
X.gen <- function(n, dim, p){
# generating sample from gaussian denoted by mixture probability = 0
if (p == 0){
X.samp <- MASS::mvrnorm(n, mu = mu0, Sigma = Sigma0)
}
# generating sample from t (df=10) or multivariate Laplace distribution
# denoted by mixture probability = 1.
else if (p == 1){
X.samp <- LaplacesDemon::rmvt(n, mu = mu0, S = Sigma0, df = 10)
############################################################################
# Uncomment line below and comment line above for generating from Laplace
#X.samp <- LaplacesDemon::rmvl(n, mu = mu0, Sigma = Sigma0)
############################################################################
}
else{
# vector of choices for mixture distributions
choice.vec <- rbinom(n, 1, p)
# generating the samples from Gaussian distribution
gauss.samp <- MASS::mvrnorm(n, mu = mu0, Sigma = Sigma0)
# generating the samples from t (df = 10) or Laplace for mixture
other.samp <- LaplacesDemon::rmvt(n, mu = mu0, S = Sigma0, df = 10)
############################################################################
# Uncomment line below and comment line above for generating from Laplace
#other.samp <- LaplacesDemon::rmvl(n, mu = mu0, Sigma = Sigma0)
############################################################################
X.samp <- (1-choice.vec) * gauss.samp + choice.vec * other.samp
}
return (X.samp)
}
Y.gen <- function(n, dim, p){
# generating sample from gaussian denoted by mixture probability = 0
if (p == 0){
Y.samp <- MASS::mvrnorm(n, mu = mu1, Sigma = Sigma1)
}
# generating sample from t (df=10) or multivariate Laplace distribution
# denoted by mixture probability = 1.
else if (p == 1){
Y.samp <- LaplacesDemon::rmvt(n, mu = mu1, S = Sigma1, df = 10)
############################################################################
# Uncomment line below and comment line above for generating from Laplace
#Y.samp  <- LaplacesDemon::rmvl(n, mu = mu1, Sigma = Sigma1)
}
else{
# vector of choices for mixture distributions
choice.vec <- rbinom(n, 1, p)
# generating the samples from Gaussian distribution
gauss.samp <- MASS::mvrnorm(n, mu = mu1, Sigma = Sigma1)
# generating the samples from t (df = 10) or Laplace for mixture
other.samp <- LaplacesDemon::rmvt(n, mu = mu1, S = Sigma1, df = 10)
############################################################################
# Uncomment line below and comment line above for generating from Laplace
#other.samp <- LaplacesDemon::rmvl(n, mu = mu1, Sigma = Sigma1)
Y.samp <- (1-choice.vec) * gauss.samp + choice.vec * other.samp
}
return (Y.samp)
}
library(reticulate)
n <- 100
n.iter <- 500
# Dimension vector of data
# Note: Change the following value for different dimensions
d <- 30
# probability of mixture
p <- seq(0,1,length.out = 6)
# parameter for sigma0 matrix generation
sigma.param <- 0.5
# parameter for sigma1 = c*sigma0 matrix generation
sigma.mult <- 1.25
# parameter for mean value for H1 distribution
mu.param <- 0
kernel.choice <- c("gaussian", "laplace")
library(foreach)
library(doParallel)
cores <- detectCores()
cl <- makeCluster(cores[1]-1)
registerDoParallel(cl)
writeLines(c(""), "log.txt")
start <- Sys.time()
power_out <- foreach(k=1:length(p), .combine=cbind, .export = ls(envir=globalenv())) %dopar% {
library(LaplacesDemon)
library(Rfast)
# Sigma0 matrix <- cov matrix under H0
Sigma0 <- matrix(0, nrow = d, ncol = d)
for(i in 1:d){
for(j in 1:d){
Sigma0[i,j] = sigma.param^(abs(i-j))
}
}
# cov matrix under H0
Sigma1 <- sigma.mult*Sigma0
#--------------------------------------------------------------------------#
#--------------------------------------------------------------------------#
# mean vector under H0
mu0 <- rep(0, d)
# mean vector under H1
mu1 <- rep(mu.param, d)
count <- rep(0, n.iter)
sink("log.txt", append=TRUE)
for (j in 1:n.iter) {
cat(paste("Starting iteration",k,"\t", j, "\n"))
# generating samples from H0 and H1
x <- X.gen(n, d, p[k])
y <- Y.gen(n, d, p[k])
kernel_choice <- kernel.choice[1]
perm <- "wild bootstrap"
type <- "increasing"
count[j] <- f(x,y, kernel_choice, perm, type)$py_count
}
cat(paste(mean(count)))
mean(count)
}
stopCluster(cl)
end <- Sys.time()
end-start
power_out
write.csv(power_out, "PowerGaussMixProb.csv")
source("C:/Users/anirbanc/Dropbox (Penn)/Kernel-Two-Sample/Simulations/Perturbed Uniform - MMDAgg/OverMean-DIM/Body.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Kernel-Two-Sample/Simulations/Perturbed Uniform - MMDAgg/OverMean-DIM/Body.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Kernel-Two-Sample/Simulations/Perturbed Uniform - MMDAgg/OverMean-DIM/Body.R", echo=TRUE)
setwd("C:/Users/anirbanc/Dropbox (Penn)/Kernel-Two-Sample/Simulations/Perturbed Uniform - MMDAgg/LocalPower")
source("C:/Users/anirbanc/Dropbox (Penn)/Kernel-Two-Sample/Simulations/Perturbed Uniform - MMDAgg/LocalPower/Body.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Kernel-Two-Sample/Simulations/Perturbed Uniform - MMDAgg/LocalPower/Body.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Kernel-Two-Sample/Simulations/Perturbed Uniform - MMDAgg/LocalPower/Body.R", echo=TRUE)
power_out
source("C:/Users/anirbanc/Dropbox (Penn)/Kernel-Two-Sample/Simulations/Perturbed Uniform - MMDAgg/LocalPower/Body.R", echo=TRUE)
power_out
sigma.mult
sigma.mult[8]
setwd("C:/Users/anirbanc/Dropbox (Penn)/Kernel-Two-Sample/Simulations/Perturbed Uniform - MMDAgg/DIM 1/Results")
GEXP<-read.csv("MultiPower-GEXP.csv")
GEXP
source("C:/Users/anirbanc/Dropbox (Penn)/Kernel-Two-Sample/Simulations/Perturbed Uniform - MMDAgg/DIM 1/Results/Figure.R", echo=TRUE)
